# Prometheus Configuration for Event Bus Service Observability
# This configuration scrapes metrics from the event bus service and other components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'event-bus-cluster'
    region: 'us-west-2'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Event Bus Service metrics
  - job_name: 'event-bus-service'
    static_configs:
      - targets: ['event-bus-service:9090']
    scrape_interval: 10s
    metrics_path: /metrics
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: event-bus-service:9090

  # Kubernetes service discovery for multiple instances
  - job_name: 'event-bus-service-k8s'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - event-bus
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: event-bus-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: kubernetes_pod_name

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
    scrape_interval: 30s
    metrics_path: /metrics

  # Kafka metrics (if using Kafka Exporter)
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka-exporter:9308']
    scrape_interval: 30s

  # Database metrics (PostgreSQL/MySQL)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # System metrics (Node Exporter)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):(.*)'
        target_label: 'instance'
        replacement: '${1}'

  # Cadvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

  # Redis metrics (if using Redis)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Custom application metrics from other services
  - job_name: 'auth-service'
    static_configs:
      - targets: ['auth-service:3001']
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'form-service'
    static_configs:
      - targets: ['form-service:8080']
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'response-service'
    static_configs:
      - targets: ['response-service:3002']
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'collaboration-service'
    static_configs:
      - targets: ['collaboration-service:8080']
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'realtime-service'
    static_configs:
      - targets: ['realtime-service:3003']
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'analytics-service'
    static_configs:
      - targets: ['analytics-service:5000']
    metrics_path: /metrics
    scrape_interval: 15s

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (optional - for long-term storage)
remote_write:
  - url: https://prometheus-us-central1.grafana.net/api/prom/push
    basic_auth:
      username: ${GRAFANA_CLOUD_USER}
      password: ${GRAFANA_CLOUD_API_KEY}
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|promhttp_.*|prometheus_.*'
        action: drop

# Remote read configuration (optional)
remote_read:
  - url: https://prometheus-us-central1.grafana.net/api/prom/read
    basic_auth:
      username: ${GRAFANA_CLOUD_USER}
      password: ${GRAFANA_CLOUD_API_KEY}
