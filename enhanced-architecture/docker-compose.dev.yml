# Enhanced Architecture Development Environment
# Docker Compose configuration for local development
version: '3.8'

services:
  # Traefik Edge Layer (Load Balancer)
  traefik:
    image: traefik:v3.0
    container_name: x-form-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - ./edge-layer/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./edge-layer/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./certs:/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=web"
    networks:
      - x-form-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    container_name: x-form-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - LOG_LEVEL=debug
      - JWT_SECRET=dev-secret-key
      - CORS_ENABLED=true
      - METRICS_ENABLED=true
      - REDIS_URL=redis://redis:6379
      - CONSUL_URL=consul:8500
    volumes:
      - ./api-gateway:/app
      - /app/bin  # Anonymous volume for build artifacts
    depends_on:
      - redis
      - consul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gateway.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api-gateway.entrypoints=web"
      - "traefik.http.services.api-gateway.loadbalancer.server.port=8080"
    networks:
      - x-form-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: x-form-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - x-form-network

  # Consul for service discovery
  consul:
    image: consul:1.16
    container_name: x-form-consul
    restart: unless-stopped
    ports:
      - "8500:8500"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: consul agent -dev -ui -client=0.0.0.0
    networks:
      - x-form-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: x-form-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - x-form-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: x-form-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - x-form-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: x-form-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - x-form-network

  # Mock Services for Development
  auth-service-mock:
    image: nginx:alpine
    container_name: x-form-auth-service-mock
    restart: unless-stopped
    ports:
      - "8181:80"
    volumes:
      - ./mocks/auth-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/api/v1/auth`)"
      - "traefik.http.routers.auth-service.entrypoints=web"
      - "traefik.http.services.auth-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

  form-service-mock:
    image: nginx:alpine
    container_name: x-form-form-service-mock
    restart: unless-stopped
    ports:
      - "8182:80"
    volumes:
      - ./mocks/form-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.form-service.rule=PathPrefix(`/api/v1/forms`)"
      - "traefik.http.routers.form-service.entrypoints=web"
      - "traefik.http.services.form-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

  response-service-mock:
    image: nginx:alpine
    container_name: x-form-response-service-mock
    restart: unless-stopped
    ports:
      - "8183:80"
    volumes:
      - ./mocks/response-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.response-service.rule=PathPrefix(`/api/v1/responses`)"
      - "traefik.http.routers.response-service.entrypoints=web"
      - "traefik.http.services.response-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

  collaboration-service-mock:
    image: nginx:alpine
    container_name: x-form-collaboration-service-mock
    restart: unless-stopped
    ports:
      - "8184:80"
    volumes:
      - ./mocks/collaboration-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.collaboration-service.rule=PathPrefix(`/api/v1/collaboration`)"
      - "traefik.http.routers.collaboration-service.entrypoints=web"
      - "traefik.http.services.collaboration-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

  realtime-service-mock:
    image: nginx:alpine
    container_name: x-form-realtime-service-mock
    restart: unless-stopped
    ports:
      - "8185:80"
    volumes:
      - ./mocks/realtime-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.realtime-service.rule=PathPrefix(`/api/v1/realtime`)"
      - "traefik.http.routers.realtime-service.entrypoints=web"
      - "traefik.http.services.realtime-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

  analytics-service-mock:
    image: nginx:alpine
    container_name: x-form-analytics-service-mock
    restart: unless-stopped
    ports:
      - "8186:80"
    volumes:
      - ./mocks/analytics-service:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics-service.rule=PathPrefix(`/api/v1/analytics`)"
      - "traefik.http.routers.analytics-service.entrypoints=web"
      - "traefik.http.services.analytics-service.loadbalancer.server.port=80"
    networks:
      - x-form-network

networks:
  x-form-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
