{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Real-time collaboration service for X-Form with WebSocket and HTTP endpoints\n\n## üèóÔ∏è Architecture Features\n- **Real-time WebSocket Communication** for instant collaboration\n- **Form Session Management** with Redis persistence\n- **Cursor Tracking** and live position sharing\n- **Question Management** with real-time updates\n- **JWT Authentication** with service-to-service communication\n- **Rate Limiting** and connection management\n\n## üîê Security Features\n- **JWT Bearer Authentication** for WebSocket connections\n- **Rate limiting** per user and connection\n- **CORS** configuration for cross-origin requests\n- **Connection validation** and session management\n\n## üåê WebSocket Events\nThe service primarily operates through WebSocket connections at `/api/v1/ws` endpoint.\nSee the [WebSocket API documentation](/docs/websocket-api.md) for detailed event specifications.\n\n## üöÄ Getting Started\n1. Use HTTP endpoints to monitor service health and manage sessions\n2. Connect to WebSocket endpoint with JWT token for real-time collaboration\n3. Send `join:form` event to join collaboration session\n4. Listen for real-time events and send updates",
        "title": "X-Form Collaboration Service API",
        "termsOfService": "https://xform.com/terms",
        "contact": {
            "name": "X-Form Development Team",
            "url": "https://github.com/Mir00r/X-Form-Backend",
            "email": "dev@xform.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/health": {
            "get": {
                "description": "Returns the health status of the collaboration service and its dependencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health \u0026 Monitoring"
                ],
                "summary": "Get service health status",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/main.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/metrics": {
            "get": {
                "description": "Returns real-time metrics and statistics for the collaboration service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health \u0026 Monitoring"
                ],
                "summary": "Get service metrics",
                "responses": {
                    "200": {
                        "description": "Service metrics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/rooms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all active collaboration rooms (forms) with basic information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room Management"
                ],
                "summary": "Get all collaboration rooms",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by active rooms only",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Maximum number of rooms to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of rooms to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rooms retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.RoomsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/rooms/{formId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed information about a specific collaboration room including users and their cursor positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room Management"
                ],
                "summary": "Get room details",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Form ID",
                        "name": "formId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.RoomDetailsResponse"
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/rooms/{formId}/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of users currently in a specific collaboration room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Room Management"
                ],
                "summary": "Get room users",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Form ID",
                        "name": "formId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by online users only",
                        "name": "online",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room users retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.UserInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all active user sessions across the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Management"
                ],
                "summary": "Get all user sessions",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by active sessions only",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Maximum number of sessions to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of sessions to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User sessions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.UserSessionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{userId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed information about a specific user's session including connections and room participation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session Management"
                ],
                "summary": "Get user session details",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"user123\"",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User session details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.UserSession"
                        }
                    },
                    "404": {
                        "description": "User session not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ws/info": {
            "get": {
                "description": "Returns information about the WebSocket endpoint, authentication requirements, and supported events for real-time collaboration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Get WebSocket information",
                "responses": {
                    "200": {
                        "description": "WebSocket information retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/WebSocketConnectionInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "APIErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "error": {
                    "type": "string",
                    "example": "Resource not found"
                },
                "message": {
                    "type": "string",
                    "example": "The requested resource was not found"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "trace_id": {
                    "type": "string",
                    "example": "abc123xyz"
                }
            }
        },
        "APIHealthResponse": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": true
                },
                "environment": {
                    "type": "string",
                    "example": "development"
                },
                "service": {
                    "type": "string",
                    "example": "collaboration-service"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "uptime": {
                    "type": "string",
                    "example": "1h30m45s"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "APIMetricsResponse": {
            "type": "object",
            "properties": {
                "activeConnections": {
                    "type": "integer",
                    "example": 25
                },
                "activeRooms": {
                    "type": "integer",
                    "example": 8
                },
                "errorsPerSecond": {
                    "type": "integer",
                    "example": 0
                },
                "messagesPerSecond": {
                    "type": "integer",
                    "example": 45
                },
                "systemUsage": {
                    "type": "object",
                    "additionalProperties": true
                },
                "totalConnections": {
                    "type": "integer",
                    "example": 150
                },
                "totalRooms": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "WebSocketConnectionInfo": {
            "type": "object",
            "properties": {
                "auth_required": {
                    "type": "boolean",
                    "example": true
                },
                "auth_type": {
                    "type": "string",
                    "example": "Bearer JWT"
                },
                "description": {
                    "type": "string",
                    "example": "WebSocket endpoint for real-time collaboration"
                },
                "endpoint": {
                    "type": "string",
                    "example": "/api/v1/ws"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "type": "string",
                    "example": "ws"
                }
            }
        },
        "main.CursorPosition": {
            "type": "object",
            "properties": {
                "questionId": {
                    "type": "string",
                    "example": "q1"
                },
                "section": {
                    "type": "string",
                    "example": "title"
                },
                "x": {
                    "type": "integer",
                    "example": 100
                },
                "y": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "NOT_FOUND"
                },
                "error": {
                    "type": "string",
                    "example": "Resource not found"
                },
                "message": {
                    "type": "string",
                    "example": "The requested resource was not found"
                },
                "path": {
                    "type": "string",
                    "example": "/api/v1/rooms/invalid-id"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "main.HealthResponse": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": true
                },
                "environment": {
                    "type": "string",
                    "example": "development"
                },
                "service": {
                    "type": "string",
                    "example": "collaboration-service"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "uptime": {
                    "type": "string",
                    "example": "1h30m45s"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "main.MetricsResponse": {
            "type": "object",
            "properties": {
                "activeConnections": {
                    "type": "integer",
                    "example": 25
                },
                "activeRooms": {
                    "type": "integer",
                    "example": 8
                },
                "averageLatency": {
                    "type": "number",
                    "example": 12.5
                },
                "cpuUsage": {
                    "type": "number",
                    "example": 15.2
                },
                "errorsPerSecond": {
                    "type": "integer",
                    "example": 0
                },
                "memoryUsage": {
                    "type": "string",
                    "example": "256MB"
                },
                "messagesPerSecond": {
                    "type": "integer",
                    "example": 45
                },
                "totalConnections": {
                    "type": "integer",
                    "example": 150
                },
                "totalRooms": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "main.RoomDetailsResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:00:00Z"
                },
                "formId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "lastActivity": {
                    "type": "string",
                    "example": "2024-01-15T10:29:45Z"
                },
                "maxUsers": {
                    "type": "integer",
                    "example": 10
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "userCount": {
                    "type": "integer",
                    "example": 3
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.UserInfo"
                    }
                }
            }
        },
        "main.RoomInfo": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:00:00Z"
                },
                "formId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "lastActivity": {
                    "type": "string",
                    "example": "2024-01-15T10:29:45Z"
                },
                "maxUsers": {
                    "type": "integer",
                    "example": 10
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "userCount": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "main.RoomsResponse": {
            "type": "object",
            "properties": {
                "activeCount": {
                    "type": "integer",
                    "example": 8
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.RoomInfo"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "totalCount": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "main.UserInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "connectedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:15:00Z"
                },
                "cursorPosition": {
                    "$ref": "#/definitions/main.CursorPosition"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "user123"
                },
                "isOnline": {
                    "type": "boolean",
                    "example": true
                },
                "lastSeen": {
                    "type": "string",
                    "example": "2024-01-15T10:29:30Z"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "main.UserSession": {
            "type": "object",
            "properties": {
                "connectedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:15:00Z"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "lastActivity": {
                    "type": "string",
                    "example": "2024-01-15T10:29:30Z"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "main.UserSessionsResponse": {
            "type": "object",
            "properties": {
                "activeCount": {
                    "type": "integer",
                    "example": 20
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.UserSession"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "totalCount": {
                    "type": "integer",
                    "example": 25
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}