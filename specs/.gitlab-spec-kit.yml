# GitLab Spec Kit Integration Configuration
# This file configures automated OpenAPI specification management in GitLab CI/CD

# NPM package configuration for GitLab Package Registry
registry: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/"

# Spec Kit Configuration
spec_kit:
  name: "@x-form/api-spec-kit"
  version: "1.0.0"
  description: "Complete OpenAPI specification suite for X-Form Backend microservices"
  
  # Repository URLs
  repository:
    type: "git"
    url: "${CI_PROJECT_URL}.git"
  
  # Issue tracking
  bugs:
    url: "${CI_PROJECT_URL}/-/issues"
  
  # Documentation links
  homepage: "https://docs.x-form.com"
  
  # Author information
  author:
    name: "X-Form Team"
    email: "api-team@x-form.com"
    url: "https://x-form.com"

# Pipeline Configuration
pipeline:
  # Trigger conditions
  triggers:
    - push
    - merge_request
    - tag
    - schedule
  
  # Branch-specific rules
  branches:
    develop:
      auto_deploy: true
      environment: "development"
      validate_breaking_changes: true
    
    main:
      auto_deploy: false
      environment: "staging"
      require_manual_approval: true
      validate_breaking_changes: true
    
    feature/*:
      auto_deploy: false
      validate_only: true
      require_pr: true

  # Tag-specific rules
  tags:
    - pattern: "v*.*.*"
      auto_deploy: false
      environment: "production"
      require_manual_approval: true
      create_release: true
      publish_package: true

# Validation Configuration
validation:
  # Spectral rules
  spectral:
    ruleset: ".spectral.yml"
    fail_on_error: true
    fail_on_warning: false
  
  # Breaking change detection
  breaking_changes:
    enabled: true
    compare_against: "main"
    fail_on_breaking: true
    exceptions:
      - "info.version"
      - "servers"
  
  # Security checks
  security:
    enabled: true
    rules:
      - "no-api-keys-in-url"
      - "no-credentials-in-url"
      - "require-authentication"
      - "validate-security-schemes"

# Documentation Generation
documentation:
  # Portal configuration
  portal:
    title: "X-Form Backend API Documentation"
    logo: "https://x-form.com/logo.png"
    theme: "explorer"
    features:
      - "try-it-out"
      - "code-samples"
      - "authentication"
  
  # Export formats
  exports:
    - format: "swagger-ui"
      path: "docs/swagger-ui/"
    - format: "redoc"
      path: "docs/redoc/"
    - format: "postman"
      path: "exports/postman/"
    - format: "insomnia"
      path: "exports/insomnia/"

# Package Publishing
publishing:
  # NPM configuration
  npm:
    registry: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
    access: "public"
    tag_latest: true
    
    # Version strategy
    versioning:
      strategy: "semantic"
      prerelease_suffix: "beta"
      auto_increment: true
  
  # GitLab Package Registry
  gitlab:
    enabled: true
    include_artifacts: true
    retention_days: 90

# Environment Configuration
environments:
  development:
    url: "https://docs-dev.x-form.com"
    deploy_on: ["develop"]
    auto_deploy: true
    
  staging:
    url: "https://docs-staging.x-form.com"
    deploy_on: ["main"]
    auto_deploy: false
    require_approval: true
    
  production:
    url: "https://docs.x-form.com"
    deploy_on: ["v*.*.*"]
    auto_deploy: false
    require_approval: true
    create_release: true

# Notifications
notifications:
  slack:
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channels:
      success: "#api-releases"
      failure: "#api-alerts"
    
    events:
      - pipeline_success
      - pipeline_failure
      - deployment_success
      - deployment_failure
      - release_created
  
  email:
    recipients:
      - "api-team@x-form.com"
      - "devops@x-form.com"
    
    events:
      - deployment_failure
      - security_issues
      - breaking_changes

# Integration Settings
integrations:
  # Jira integration
  jira:
    enabled: true
    server: "${JIRA_SERVER_URL}"
    project_key: "XFORM"
    issue_types:
      - "API Change"
      - "Breaking Change"
      - "Documentation Update"
  
  # Confluence integration
  confluence:
    enabled: true
    space_key: "API"
    parent_page: "API Documentation"
    auto_update: true

# Security Settings
security:
  # Secrets management
  secrets:
    - "GITLAB_TOKEN"
    - "NPM_TOKEN"
    - "SLACK_WEBHOOK_URL"
    - "DEPLOY_TOKENS"
  
  # Access control
  access:
    maintainers:
      - "api-team"
      - "platform-team"
    
    reviewers:
      - "senior-developers"
      - "technical-leads"
    
    deployers:
      - "devops-team"
      - "release-managers"

# Monitoring & Metrics
monitoring:
  # Analytics
  analytics:
    track_usage: true
    track_errors: true
    dashboard_url: "https://grafana.x-form.com/d/api-specs"
  
  # Health checks
  health_checks:
    endpoint: "/health"
    interval: "5m"
    timeout: "30s"
    retries: 3
  
  # Performance monitoring
  performance:
    response_time_threshold: "2s"
    error_rate_threshold: "1%"
    availability_threshold: "99.9%"

# Backup & Recovery
backup:
  # Specification backups
  specs:
    enabled: true
    frequency: "daily"
    retention: "90d"
    storage: "s3://x-form-backups/api-specs/"
  
  # Documentation backups
  docs:
    enabled: true
    frequency: "weekly"
    retention: "30d"
    storage: "s3://x-form-backups/api-docs/"

# Feature Flags
features:
  # Experimental features
  experimental:
    ai_code_generation: false
    auto_sdk_generation: true
    performance_testing: false
  
  # Beta features
  beta:
    advanced_validation: true
    contract_testing: true
    api_mocking: false
