events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth-service:3001;
    }

    upstream form_service {
        server form-service:8001;
    }

    upstream response_service {
        server response-service:3002;
    }

    upstream realtime_service {
        server realtime-service:8002;
    }

    upstream analytics_service {
        server analytics-service:5001;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy strict-origin-when-cross-origin;

        # CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

        # Handle preflight requests
        location ~* ^.+\.(OPTIONS)$ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            return 200;
        }

        # Health check endpoint
        location /health {
            return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Auth Service
        location /auth/ {
            limit_req zone=auth burst=20 nodelay;
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # User Service (part of auth)
        location /user/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://auth_service/user/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Form Service
        location /api/v1/forms/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://form_service/api/v1/forms/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Response Service
        location /api/v1/responses/ {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://response_service/api/v1/responses/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Public form submission endpoint (no rate limiting for this)
        location /forms/ {
            proxy_pass http://response_service/forms/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Real-time WebSocket endpoints
        location /ws/ {
            proxy_pass http://realtime_service/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Analytics Service
        location /analytics/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://analytics_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File upload endpoints (will be implemented with AWS Lambda)
        location /upload/ {
            return 501 '{"error":"File service not implemented yet"}';
            add_header Content-Type application/json;
        }

        # Default location
        location / {
            return 404 '{"error":"Endpoint not found"}';
            add_header Content-Type application/json;
        }
    }
}
